#端口号
server:
  port: 8500

#服务注册名称
spring:
  application:
    name: goods-server

  #数据库相关配置
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/ec-goods?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: admin
    #设置数据源（不设置会用默认的数据源）
    type: com.alibaba.druid.pool.DruidDataSource

  # REDIS (RedisProperties)
  # Redis数据库索引（默认为0）
  redis:
    database: 4
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口(默认6379)
    port: 6380
    # Redis服务器连接密码（默认为空）
    password:
    # 连接池最大连接数（使用负值表示没有限制）
    jedis:
      pool:
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 10000

mybatis-plus:
  # xml
  mapper-locations: classpath:mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  #type-aliases-package: com.xb.member
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: input
#注册中心地址
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8100/eureka/

#微服务调用超时失败的两种情况:
#1.由于spring的懒加载机制，Ribbon在第一次调用的时候才会去初始化Ribbon Client，然后才去调用远端服务，这需要一定的时间，而Ribbon本身的默认超时时间是1秒钟
#2.当请求响应时间过长，触发了熔断器，所以导致了请求失败。
ribbon:
  ReadTimeout: 15000
  ConnectTimeout: 15000
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 15000

#swagger相关配置
swagger:
  base-package: com.xb.goods
  title: SpringCloud2.x构建企业级微服务项目-商品模块接口
  description: 该项目“基于SpringCloud2.x构建企业级微服务项目”
  version: 1.1
  terms-of-service-url: www.xxxx.com
  contact:
    name: com.xb
    email: xxxxxxx@qq.com